--분석 함수

--로우 별 그룹을 지정해서 값을 집계하는 함수

--sum,max,mun,avg 등 분석함수로 사용 가능, 그 외에 ROW_NUMBER,RANK,DENSE,LAG,LEAD함수가 있다

--ROW NUMBER

--부서별로 사원의 급여 순으로 순번을 구하기
SELECT B.DEPARTMENT_ID,B.DEPARTMENT_NAME, A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME,
       ROW_NUMBER()OVER(PARTITION BY B.DEPARTMENT_ID ORDER BY A.SALARY), A.SALARY
FROM DEPARTMENTS B, EMPLOYEES A
WHERE A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,4;

--부서별로 사원의 급여 높은순여순으로 순번을 구하기
SELECT B.DEPARTMENT_ID,B.DEPARTMENT_NAME, A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME,
       ROW_NUMBER()OVER(PARTITION BY B.DEPARTMENT_ID ORDER BY A.SALARY DESC), A.SALARY
FROM DEPARTMENTS B, EMPLOYEES A
WHERE A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,4;

--전 사원의 급여가 높은 순으로 순번을 구하기
SELECT B.DEPARTMENT_ID,B.DEPARTMENT_NAME, A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME,
    ROW_NUMBER() OVER(ORDER BY SALARY DESC), SALARY
FROM DEPARTMENTS B, EMPLOYEES A
WHERE A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 4;

--RANK()와 DENSE_RANK()

--부서별로 사원의 급여가 높은 순으로 순위을 구하기
SELECT B.DEPARTMENT_ID,B.DEPARTMENT_NAME, A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME,
    RANK() OVER(PARTITION BY A.DEPARTMENT_ID ORDER BY SALARY DESC), SALARY
FROM DEPARTMENTS B, EMPLOYEES A
WHERE A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,4;

SELECT B.DEPARTMENT_ID,B.DEPARTMENT_NAME, A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME,
    DENSE_RANK() OVER(PARTITION BY A.DEPARTMENT_ID ORDER BY SALARY DESC), SALARY
FROM DEPARTMENTS B, EMPLOYEES A
WHERE A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,4;

--LEAD: 후행 로우값

SELECT *
FROM EMPLOYEES;
--부서별, 입사일자 순 직후 사원의 급여를 구하기
SELECT B.DEPARTMENT_ID, B.DEPARTMENT_NAME, A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME, A.HIRE_DATE, SALARY,
        LEAD(SALARY) OVER (PARTITION BY A.DEPARTMENT_ID ORDER BY A.HIRE_DATE) LEAD_SALARY
FROM EMPLOYEES A
INNER JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,4;

SELECT B.DEPARTMENT_ID, B.DEPARTMENT_NAME, A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME, A.HIRE_DATE, SALARY,
        LEAD(SALARY,2,0) OVER (PARTITION BY A.DEPARTMENT_ID ORDER BY A.HIRE_DATE) LEAD_SALARY
FROM EMPLOYEES A
INNER JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,4;

--LAG: 선행 로우값
SELECT B.DEPARTMENT_ID, B.DEPARTMENT_NAME, A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME, A.HIRE_DATE, SALARY,
        LAG(SALARY,1,0) OVER (PARTITION BY A.DEPARTMENT_ID ORDER BY A.HIRE_DATE) PREVSAL
FROM EMPLOYEES A
INNER JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,4;

SELECT B.DEPARTMENT_ID, B.DEPARTMENT_NAME, A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME, A.HIRE_DATE,
        LAG(SALARY,1,0) OVER (PARTITION BY A.DEPARTMENT_ID ORDER BY A.HIRE_DATE) PREVSAL, SALARY,LEAD(SALARY,1,0) OVER (PARTITION BY A.DEPARTMENT_ID ORDER BY A.HIRE_DATE) NEXTSAL
FROM EMPLOYEES A
INNER JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,4;

--집계함수 사용
--부서별 평균 급여와 사원의 급여를 동시에 조회
SELECT B.DEPARTMENT_ID, B.DEPARTMENT_NAME, A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME, A.SALARY,
        ROUND(AVG(A.SALARY) OVER (PARTITION BY A.DEPARTMENT_ID ORDER BY A.DEPARTMENT_ID),0)
FROM EMPLOYEES A
INNER JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,3;


--사원의 급여와 부서별 누적 급여 조회
SELECT B.DEPARTMENT_ID, B.DEPARTMENT_NAME,A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME, A.SALARY,
       ROUND(SUM(A.SALARY) OVER( PARTITION BY A.DEPARTMENT_ID ORDER BY A.SALARY),0)
FROM EMPLOYEES A
INNER JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,4; 


--부서별 사원 급여의 비율
SELECT B.DEPARTMENT_ID, B.DEPARTMENT_NAME,A.FIRST_NAME||''||A.LAST_NAME AS EMP_NAME, A.SALARY,
       ROUND(RATIO_TO_REPORT(A.SALARY) OVER( PARTITION BY A.DEPARTMENT_ID),2)
FROM EMPLOYEES A
INNER JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID=B.DEPARTMENT_ID
ORDER BY 2,4 DESC; 